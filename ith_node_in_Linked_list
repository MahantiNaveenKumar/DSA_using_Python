class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def take_input():
    input_list = list(map(int, input().split()))
    head = None
    tail = None
    for curr in input_list:
        if curr == -1:
            break
        new_node = Node(curr)
        if head is None:
            head = new_node
            tail = new_node
        else:
            tail.next = new_node
            tail = new_node
    return head

def print_ith_node(head, i):
    curr = head
    p = 0
    while curr is not None:
        if p == i:
            print(curr.data)
            return
        p += 1
        curr = curr.next
    # If the i-th index is out of the bounds of the list, we can print a message
    print()

# Main execution starts here
if __name__ == "__main__":
    t = int(input().strip())
    while t > 0:
        head = take_input()
        i = int(input().strip())
        print_ith_node(head, i)
        t -= 1
# example

Sample Input 1 :
1
3 4 5 2 6 1 9 -1
3
Sample Output 1 :
2
Sample Input 2 :
2
3 4 5 2 6 1 9 -1
0
9 8 4 0 7 8 -1
3
Sample Output 2 :
3
0
